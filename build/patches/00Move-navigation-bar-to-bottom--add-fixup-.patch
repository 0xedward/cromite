From: Your Name <you@example.com>
Date: Tue, 27 Dec 2022 16:58:28 +0000
Subject: Move navigation bar to bottom (add fixup)

---
 .../TabListContainerViewBinder.java           |  4 --
 .../tab_management/TabListCoordinator.java    | 69 ++++++++++++++++++-
 .../tab_management/TabSwitcherMediator.java   |  3 +
 3 files changed, 69 insertions(+), 7 deletions(-)

diff --git a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabListContainerViewBinder.java b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabListContainerViewBinder.java
--- a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabListContainerViewBinder.java
+++ b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabListContainerViewBinder.java
@@ -21,8 +21,6 @@ import androidx.recyclerview.widget.LinearLayoutManager;
 import org.chromium.components.browser_ui.styles.ChromeColors;
 import org.chromium.ui.modelutil.PropertyKey;
 import org.chromium.ui.modelutil.PropertyModel;
-import org.chromium.chrome.browser.flags.CachedFeatureFlags;
-import org.chromium.chrome.browser.flags.ChromeFeatureList;
 
 /**
  * ViewBinder for TabListRecyclerView.
@@ -59,8 +57,6 @@ class TabListContainerViewBinder {
             params.topMargin = newTopMargin;
             view.requestLayout();
         } else if (BOTTOM_CONTROLS_HEIGHT == propertyKey) {
-            if (CachedFeatureFlags.isEnabled(ChromeFeatureList.MOVE_TOP_TOOLBAR_TO_BOTTOM))
-                return;
             FrameLayout.LayoutParams params = (FrameLayout.LayoutParams) view.getLayoutParams();
             params.bottomMargin = model.get(BOTTOM_CONTROLS_HEIGHT);
             view.requestLayout();
diff --git a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabListCoordinator.java b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabListCoordinator.java
--- a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabListCoordinator.java
+++ b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabListCoordinator.java
@@ -7,6 +7,7 @@ package org.chromium.chrome.browser.tasks.tab_management;
 import static org.chromium.chrome.browser.tasks.tab_management.TabListModel.CardProperties.CARD_TYPE;
 
 import android.content.Context;
+import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
@@ -98,6 +99,62 @@ public class TabListCoordinator
     private boolean mLayoutListenerRegistered;
     private @Nullable TabStripSnapshotter mTabStripSnapshotter;
 
+    public class GridLayoutManagerDockBottom extends GridLayoutManager {
+        Context mContext;
+
+        TabListRecyclerView mRecyclerView;
+
+        int mTopPadding = -1;
+        int mLastPosition = -1;
+        boolean mIsFirstLayout = true;
+
+        public GridLayoutManagerDockBottom(Context context, int spanCount) {
+            super(context, spanCount);
+            mContext = context;
+        }
+
+        public void setTabListRecyclerView(TabListRecyclerView recyclerView) {
+            mRecyclerView = recyclerView;
+        }
+
+        public void ResetTopPosition() {
+            mIsFirstLayout = true;
+        }
+
+        @Override
+        public int getPaddingTop() {
+            if (mContext.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE)
+                return 0;
+            if (mTopPadding == -1) return super.getPaddingTop();
+            return mTopPadding;
+        }
+
+        @Override
+        public void scrollToPositionWithOffset(int position, int offset) {
+            mLastPosition = position;
+            super.scrollToPositionWithOffset(position, -1);
+        }
+
+        @Override
+        public void onLayoutCompleted(RecyclerView.State state) {
+            super.onLayoutCompleted(state);
+
+            View lastView = findViewByPosition(findFirstVisibleItemPosition());
+            if (lastView != null) {
+                mTopPadding = mRecyclerView.getHeight() - lastView.getHeight();
+                if (mIsFirstLayout) {
+                    mIsFirstLayout = false;
+                    scrollToPositionWithOffset(mLastPosition, 0);
+                }
+            }
+
+            if (mLastPosition != -1 && mLastPosition >= state.getItemCount()) {
+                ResetTopPosition();
+                scrollToPositionWithOffset(state.getItemCount()-getSpanCount(), 0);
+            }
+        }
+    }
+
     /**
      * Construct a coordinator for UI that shows a list of tabs.
      * @param mode Modes of showing the list of tabs. Can be used in GRID or STRIP.
@@ -258,9 +315,12 @@ public class TabListCoordinator
             if (mMode == TabListMode.GRID) {
                 GridLayoutManager gridLayoutManager =
                         new GridLayoutManager(context, GRID_LAYOUT_SPAN_COUNT_COMPACT);
-                // invert the order if the toolbar is at bottom
-                if (titleProvider != null && CachedFeatureFlags.isEnabled(ChromeFeatureList.MOVE_TOP_TOOLBAR_TO_BOTTOM))
-                    gridLayoutManager.setReverseLayout(true);
+                if (titleProvider != null && CachedFeatureFlags.isEnabled(ChromeFeatureList.MOVE_TOP_TOOLBAR_TO_BOTTOM)) {
+                    gridLayoutManager =
+                        new GridLayoutManagerDockBottom(context, GRID_LAYOUT_SPAN_COUNT_COMPACT);
+                    ((GridLayoutManagerDockBottom)gridLayoutManager)
+                        .setTabListRecyclerView(mRecyclerView);
+                }
                 mRecyclerView.setLayoutManager(gridLayoutManager);
                 mMediator.registerOrientationListener(gridLayoutManager);
                 mMediator.updateSpanCount(gridLayoutManager,
@@ -440,6 +500,9 @@ public class TabListCoordinator
         }
         registerLayoutChangeListener();
         mRecyclerView.prepareTabSwitcherView();
+        GridLayoutManager glm = (GridLayoutManager) mRecyclerView.getLayoutManager();
+        if (glm instanceof GridLayoutManagerDockBottom)
+            ((GridLayoutManagerDockBottom)glm).ResetTopPosition();
         mMediator.prepareTabSwitcherView();
         mMediator.registerOnScrolledListener(mRecyclerView);
     }
diff --git a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabSwitcherMediator.java b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabSwitcherMediator.java
--- a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabSwitcherMediator.java
+++ b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabSwitcherMediator.java
@@ -760,6 +760,9 @@ class TabSwitcherMediator implements TabSwitcher.Controller, TabListRecyclerView
     private void setInitialScrollIndexOffset() {
         int offset = mMode == TabListMode.CAROUSEL ? INITIAL_SCROLL_INDEX_OFFSET_CAROUSEL
                                                    : INITIAL_SCROLL_INDEX_OFFSET_GTS;
+        if (CachedFeatureFlags.isEnabled(ChromeFeatureList.MOVE_TOP_TOOLBAR_TO_BOTTOM)) {
+            offset = 0;
+        }
         int initialPosition = Math.max(
                 mTabModelSelector.getTabModelFilterProvider().getCurrentTabModelFilter().index()
                         - offset,
--
2.25.1
