From: Your Name <you@example.com>
Date: Mon, 30 Jan 2023 15:14:09 +0000
Subject: 109 ADDNEW Add an always-incognito mode

---
 .../chrome/browser/ChromeTabbedActivity.java        | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
@@ -59,6 +59,9 @@ import org.chromium.base.task.PostTask;
 import org.chromium.build.annotations.UsedByReflection;
 import org.chromium.cc.input.BrowserControlsState;
 import org.chromium.chrome.R;
+import org.chromium.components.prefs.PrefService;
+import org.chromium.components.user_prefs.UserPrefs;
+import org.chromium.chrome.browser.preferences.Pref;
 import org.chromium.chrome.browser.AlwaysIncognitoLinkInterceptor;
 import org.chromium.chrome.browser.IntentHandler.IntentHandlerDelegate;
 import org.chromium.chrome.browser.IntentHandler.TabOpenType;
@@ -583,9 +586,13 @@ public class ChromeTabbedActivity extends ChromeActivity<ChromeActivityComponent
 
             // For saving non-incognito tab closures for Recent Tabs.
             boolean alwaysIncognito = AlwaysIncognitoLinkInterceptor.isAlwaysIncognito();
-            mHistoricalTabModelObserver =
-                    new HistoricalTabModelObserver(mTabModelSelector.getModel(alwaysIncognito));
-
+            PrefService prefService = UserPrefs.get(Profile.getLastUsedRegularProfile());
+            boolean historyEnabledInIncognito =
+                prefService.getBoolean(Pref.INCOGNITO_TAB_HISTORY_ENABLED);
+            if ((alwaysIncognito && historyEnabledInIncognito) || !alwaysIncognito) {
+                mHistoricalTabModelObserver =
+                        new HistoricalTabModelObserver(mTabModelSelector.getModel(alwaysIncognito));
+            }
             if (TabUiFeatureUtilities.isTabletGridTabSwitcherEnabled(this)) {
                 mTabModelSelector.addObserver(new TabModelSelectorObserver() {
                     @Override
--
2.25.1
